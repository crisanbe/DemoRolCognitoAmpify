type Use @model @auth(rules: [{allow: owner, ownerField: "usoOwner", operations: [create, update, delete, read]}, {allow: private, provider: userPools, operations: [read]}, {allow: private, provider: iam, operations: [read, update]}]) {
  id: ID!
  cardNumber: String
  balance: Float
  sequenceNumber: Int
  status: Boolean
  usoOwner: String
  deviceID: ID! @index(name: "byDevice")
  device: Device @belongsTo(fields: ["deviceID"])
}

type Bus @model @auth(rules: [{allow: owner, ownerField: "busOwner", operations: [create, update, delete, read]}, {allow: private, provider: userPools, operations: [read]}, {allow: private, provider: iam, operations: [read, update]}]) {
  id: ID!
  plate: String
  status: Boolean
  busOwner: String
  companyID: ID! @index(name: "byCompany")
  company: Company @belongsTo(fields: ["companyID"])
}

type Company @model @auth(rules: [{allow: owner, ownerField: "companyOwner", operations: [create, update, delete, read]}, {allow: private, provider: userPools, operations: [read]}, {allow: private, provider: iam, operations: [read, update]}]) {
  id: ID!
  name: String
  rutaCivica: String
  commissionPerTicket: Float
  lastEditorId: Int
  companyOwner: String
  devices: [Device] @hasMany(indexName: "byCompany", fields: ["id"])
  buses: [Bus] @hasMany(indexName: "byCompany", fields: ["id"])
}

type Device @model @auth(rules: [{allow: owner, ownerField: "deviceOwner", operations: [create, update, delete, read]}, {allow: private, provider: userPools, operations: [create, update, delete, read]}, {allow: private, provider: iam, operations: [read, update]}]) {
  id: ID!
  imei: String
  civicaSerial: String
  lastEditorId: Int
  deviceOwner: String
  companyID: ID! @index(name: "byCompany")
  company: Company @belongsTo(fields: ["companyID"])
  bus: Bus @hasOne
  uses: [Use] @hasMany(indexName: "byDevice", fields: ["id"])
} 